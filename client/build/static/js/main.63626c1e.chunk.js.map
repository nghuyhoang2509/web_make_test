{"version":3,"sources":["components/Loading.js","pages/Home.js","components/CanvasHeader.js","components/Header.js","actions/login.js","pages/Login.js","pages/Tools.js","pages/Signup.js","actions/signup.js","pagesprivate/test/Create.js","actions/test.js","components/HeaderCategory.js","components/BodyCategory.js","components/ScrollTop.js","pagesprivate/test/Category.js","pagesprivate/test/Exam.js","pagesprivate/test/Edit.js","pagesprivate/PrivateRouter.js","pagesprivate/test/Test.js","App.js","reportWebVitals.js","reducers/signup.js","reducers/login.js","reducers/test.js","reducers/index.js","api/index.js","api/auth.js","sagas/auth.js","api/test.js","sagas/test.js","sagas/index.js","store/index.js","index.js"],"names":["Loading","className","Spinner","animation","role","variant","home","to","CanvasHeader","props","useState","show","setShow","handleClose","Button","onClick","Offcanvas","onHide","placement","Header","closeButton","Title","infoUser","username","Navbar","Brand","Body","logout","connect","type","bg","Container","Nav","state","loginState","login","loginRequest","payload","password","formUser","setFormUser","Form","Group","controlId","Control","placeholder","value","autoComplete","onChange","e","target","changeUsername","Text","changePassword","preventDefault","alert","submitForm","loginStatus","Tools","console","log","signupState","signup","createUserRequest","usernameRef","useRef","passwordRef","passwordCofRef","passwordCof","setPasswordCof","errorUsername","setErrorUsername","errorPassword","setErrorPassword","errorPasswordCof","setErrorPasswordCof","useEffect","length","includes","ref","changePasswordCof","signupLoading","signupStatus","Create","class","Modal","backdrop","keyboard","Footer","createTestFail","loadTestFail","deleteTestFail","getTestRequest","getTestFail","updateTestFail","answerFail","createTestRequest","title","description","test","setTest","FormControl","Label","testLoaded","loadingTest","pauseLoadTest","loadTestRequest","deleteTestRequest","idTest","setIdTest","loadMore","setLoadMore","loadTest","root","document","querySelector","path","innerHeight","scrollY","clientHeight","window","addEventListener","removeEventListener","map","Card","style","width","_id","size","id","ScrollTop","url","scrollTo","loading","exam","user","info","answerRequest","useParams","userId","answer","toUpperCase","onSubmit","testId","questions","question","indexQuestion","name","onBlur","questionId","options","option","index","Check","htmlFor","responseAnswers","createQuestion","updateExam","createOption","updateQuestion","updateTestRequest","updateOption","updateAnswer","deleteOption","deleteQuestion","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","suppressContentEditableWarning","contentEditable","innerText","createdAt","answers","toString","defaultChecked","location","host","Table","striped","bordered","hover","date","isLogined","components","Test","exact","verifyAuthRequest","loginLoading","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultReducer","signupReducer","action","message","error","loginReducer","localStorage","setItem","accessToken","refreshToken","removeItem","page","limitPage","skipPage","testReducer","data","findIndex","slice","reponseAnswers","push","uuidv4","splice","combineReducers","instance","axios","create","baseURL","createUser","post","verifyAuth","headers","getItem","call","apiAuth","response","success","put","createTest","deleteTest","getTest","updateTest","patch","answerTest","reloadTest","select","apiTest","mySaga","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reducers","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63626c1e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"vh-100 vw-100 d-flex align-items-center justify-content-center\">\r\n            <h3 className=\"mr-2\">Loading</h3>\r\n            <Spinner animation=\"border\" role=\"status\" variant=\"primary\"></Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst home = () => {\r\n    return (\r\n        <>\r\n            <div className=\"jumbotron jumbotron-fluid vh-100 vw-100 slider\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4\">Chào mừng bạn đến với chúng tôi</h1>\r\n                    <p className=\"lead\">Website hỗ trợ các công cụ tạo đề thi dễ dàng và nhanh chóng</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>Bấm vào đây để bắt đầu tạo nhanh đề thi</p>\r\n                    <p className=\"lead\">\r\n                        <Link to=\"tools\" className=\"btn btn-primary btn-lg\" role=\"button\">Tạo ngay</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default home\r\n","import React, { useState } from \"react\";\r\nimport { Button, Offcanvas, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst CanvasHeader = (props) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow} className=\"d-flex d-md-none justify-content-center align-items-center p-0\">\r\n                <span className=\"material-icons-outlined h-100 w-100 font-36px\">\r\n                    toc\r\n                </span>\r\n            </Button>\r\n\r\n            <Offcanvas show={show} onHide={handleClose} placement=\"end\" >\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>{props.infoUser\r\n                        ?\r\n                        <Link to=\"/profile\" className=\"text-decoration-none d-flex align-items-center text-dark font-size-xlarge\" onClick={handleClose}>\r\n                            <span className=\"material-icons font-size-xxlarge\">person</span>\r\n                            {props.infoUser.username}\r\n                        </Link>\r\n\r\n                        :\r\n                        <Link to=\"/\" className=\"text-decoration-none\" onClick={handleClose}>\r\n                            <Navbar.Brand>\r\n                                TFO\r\n                            </Navbar.Brand>\r\n                        </Link>}</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body className=\"border-top-dark\">\r\n                    <Link to=\"/tools\" className=\"text-decoration-none me-auto text-dark font-weight-bold font-size-larger my-16px opacity-6\" onClick={handleClose}>\r\n                        Công cụ\r\n                    </Link>\r\n                    {props.infoUser\r\n                        ?\r\n                        <div className=\"text-decoration-none cursor-pointer font-weight-bold font-size-larger my-16px opacity-6\" onClick={() => props.logout()}>\r\n                            Đăng xuất\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <Link to=\"/login\" className=\"text-decoration-none font-weight-bold font-size-larger my-16px opacity-6 text-dark d-block\" onClick={handleClose}>\r\n                                Đăng nhập\r\n                            </Link>\r\n                            <Link to=\"/signup\" className=\"text-decoration-none font-weight-bold font-size-larger my-16px opacity-6 text-dark d-block p-0\" onClick={handleClose}>\r\n                                Đăng ký\r\n                            </Link>\r\n                        </>\r\n                    }\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CanvasHeader","import React from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\"\r\nimport { logout } from \"../actions/login\"\r\n\r\nimport CanvasHeader from \"./CanvasHeader\"\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <Container>\r\n                    <Link to=\"/\" className=\"text-decoration-none\">\r\n                        <Navbar.Brand>\r\n                            TFO\r\n                        </Navbar.Brand>\r\n                    </Link>\r\n                    <Nav className=\"flex-1 d-none d-md-flex\">\r\n                        <Link to=\"/tools\" className=\"text-decoration-none nav-link me-auto\">\r\n                            Công cụ\r\n                        </Link>\r\n                        {props.infoUser ?\r\n                            <>\r\n                                <Link to=\"/profile\" className=\"text-decoration-none nav-link d-flex align-items-center border-right-white\">\r\n                                    <span className=\"material-icons\">person</span>\r\n                                    {props.infoUser.username}\r\n                                </Link>\r\n                                <div className=\"text-decoration-none nav-link d-flex align-items-center cursor-pointer\" onClick={() => props.logout()}>\r\n                                    Đăng xuất\r\n                                </div>\r\n                            </> : <>\r\n                                <Link to=\"/login\" className=\"text-decoration-none nav-link border-right-white\">\r\n                                    Đăng nhập\r\n                                </Link>\r\n                                <Link to=\"/signup\" className=\"text-decoration-none nav-link\">\r\n                                    Đăng ký\r\n                                </Link>\r\n                            </>}\r\n                    </Nav>\r\n                    <CanvasHeader {...props}/>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(null, { logout })(Header)\r\n","export function loginRequest(payload){\r\n    return {\r\n        type: \"LoginRequest\",\r\n        payload,\r\n    }\r\n}\r\n\r\nexport function loginSuccess(payload){\r\n    return {\r\n        type: \"LoginSuccess\",\r\n        payload,\r\n    }\r\n}\r\n\r\nexport function loginFail(error){\r\nreturn { \r\n    type: \"LoginFail\",\r\n    error: error\r\n}\r\n}\r\n\r\nexport function verifyAuthRequest(){\r\n    return {\r\n        type: \"VerifyAuthRequest\",\r\n    }\r\n}\r\n\r\nexport function verifyAuthSuccess(payload){\r\n    return {\r\n        type: \"VerifyAuthSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function verifyAuthFail(error){\r\n    return {\r\n        type: \"VerifyAuthFail\",\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport function logout(){\r\n    return {\r\n        type: \"Logout\"\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from '../actions/login';\r\n\r\nconst Login = (props) => {\r\n    var [formUser, setFormUser] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    function changeUsername(e) {\r\n        setFormUser({ ...formUser, username: e.target.value })\r\n    }\r\n    function changePassword(e) {\r\n        setFormUser({ ...formUser, password: e.target.value })\r\n    }\r\n    function submitForm(e) {\r\n        e.preventDefault()\r\n        if (formUser.username !== \"\" && formUser.password !== \"\") {\r\n            props.loginRequest(formUser)\r\n            setFormUser({\r\n                username: \"\",\r\n                password: \"\"\r\n            })\r\n        } else {\r\n            alert('Bạn vui lòng nhập đầy đủ')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"vh-100 vw-100 d-flex align-items-center\">\r\n                <Form className=\"col-lg-4 col-12 offset-lg-4\">\r\n                    <h3 className=\"mb-4\">Đăng Nhập</h3>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                        <Form.Control type=\"text\" placeholder=\"Nhập tên tài khoản\" value={formUser.username} autoComplete=\"username\" onChange={(e) => changeUsername(e)} />\r\n                        <Form.Text className=\"text-danger\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Nhập mật khẩu\" value={formUser.password} autoComplete=\"current-password\" onChange={(e) => changePassword(e)} />\r\n                        <Form.Text className=\"text-danger\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"btn-submit\" onClick={(e) => submitForm(e)}>\r\n                        Đăng nhập\r\n                    </Button>\r\n                    <p className=\"mt-4\">Nếu chưa có tài khoản bấm vào đây. <Link to=\"/signup\">Đăng ký</Link></p>\r\n                    <p className=\"text-600\">{props.loginState.loginStatus}</p>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { loginState: state.login }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginRequest })(Login)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Tools = () => {\r\n    console.log('tools')\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row my-200px\">\r\n                    <div className=\"col-md-6 col-xs-12 col-lg-3 d-flex justify-content-center\">\r\n                        <Link to=\"/admin/test/category\">\r\n                        <div className=\"tools-card\">\r\n                            <span className=\"material-icons-outlined font-size-xxlarge mb-4 text-warning\">quiz</span>\r\n                            <h5 className=\"text-dark\">Đề Thi</h5>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tools\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\nimport { createUserRequest } from \"../actions/signup\"\r\n\r\nconst Signup = (props) => {\r\n    var [formUser, setFormUser] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n    var usernameRef = useRef(\"\")\r\n    var passwordRef = useRef(\"\")\r\n    var passwordCofRef = useRef(\"\")\r\n    var [passwordCof, setPasswordCof] = useState(\"\")\r\n    var [errorUsername, setErrorUsername] = useState(null)\r\n    var [errorPassword, setErrorPassword] = useState(null)\r\n    var [errorPasswordCof, setErrorPasswordCof] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (formUser.username.length < 8 || formUser.username.includes(\" \") || formUser.username.length > 24) {\r\n            setErrorUsername(\"Nhập tên tài khoản tối thiểu 8 và tối đa 24 kí tự, không có khoảng trắng.\")\r\n        } else {\r\n            setErrorUsername(\"\")\r\n        }\r\n        if (formUser.password.length < 6 || formUser.password.includes(\" \") || formUser.password.length > 16) {\r\n            setErrorPassword(\"Nhập tên tài khoản tối thiểu 8 và tối đa 16 kí tự, không có khoảng trắng.\")\r\n        } else {\r\n            setErrorPassword(\"\")\r\n            if (formUser.password !== passwordCof) {\r\n                setErrorPasswordCof(\"Xác nhận mật khẩu không chính xác\")\r\n            } else {\r\n                setErrorPasswordCof(\"\")\r\n            }\r\n        }\r\n        if (passwordCof === formUser.password) {\r\n            setErrorPasswordCof(\"\")\r\n        } else {\r\n            setErrorPasswordCof(\"Xác nhân mật khẩu không chính xác\")\r\n        }\r\n    }, [formUser, passwordCof])\r\n\r\n    function changeUsername(e) {\r\n        setFormUser({ ...formUser, username: e.target.value })\r\n    }\r\n    function changePassword(e) {\r\n        setFormUser({ ...formUser, password: e.target.value })\r\n    }\r\n    function changePasswordCof(e) {\r\n        setPasswordCof(e.target.value)\r\n    }\r\n    function submitForm(e) {\r\n        e.preventDefault()\r\n        if (props.signupState.signupLoading === true) {\r\n            alert('Hãy đợi tài khoản tạo xong')\r\n        } else {\r\n            if (errorUsername === \"\" && errorPassword === \"\" && errorPasswordCof === \"\") {\r\n                props.createUserRequest(formUser)\r\n                setFormUser({\r\n                    username: \"\",\r\n                    password: \"\"\r\n                })\r\n                setPasswordCof(\"\")\r\n                setErrorPassword(null)\r\n                setErrorUsername(null)\r\n                setErrorPasswordCof(null)\r\n            } else {\r\n                alert('Bạn vui lòng nhập thông tin hợp lệ hoặc đợi tài khoản tạo xong')\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Container className=\"vh-100 vw-100 d-flex align-items-center\">\r\n                <Form className=\"col-lg-4 col-12 offset-lg-4\">\r\n                    <h3 className=\"mb-4\">Đăng Ký</h3>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n                        <Form.Control ref={usernameRef} type=\"text\" placeholder=\"Nhập tên tài khoản\" value={formUser.username} autoComplete=\"username\" onChange={(e) => changeUsername(e)} />\r\n                        <Form.Text className=\"text-danger mt-1\">\r\n                            {errorUsername}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Control ref={passwordRef} type=\"password\" placeholder=\"Nhập mật khẩu\" value={formUser.password} autoComplete=\"new-password\" onChange={(e) => changePassword(e)} />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {errorPassword}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPasswordCof\">\r\n                        <Form.Control ref={passwordCofRef} type=\"password\" placeholder=\"Nhập lại mật khẩu\" value={passwordCof} autoComplete=\"new-password\" onChange={(e) => changePasswordCof(e)} />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {errorPasswordCof}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"btn-submit\" onClick={(e) => submitForm(e)}>\r\n                        Đăng ký\r\n                    </Button>\r\n                    <p className=\"mt-4\">Nếu đã có tài khoản bấm vào đây. <Link to=\"/login\">Đăng nhập</Link></p>\r\n                    <p className=\"text-600\">{props.signupState.signupStatus}</p>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        signupState: state.signup,\r\n        loginState: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createUserRequest })(Signup)\r\n","export function createUserRequest(payload){\r\n        return {\r\n            type: \"CreateUserRequest\",\r\n            payload,\r\n        }\r\n    }\r\n\r\nexport function createUserSuccess(payload){\r\n        return {\r\n            type: \"CreateUserSuccess\",\r\n            payload,\r\n        }\r\n}\r\n\r\nexport function createUserFail(error){\r\n    return { \r\n        type: \"CreateUserFail\",\r\n        error: error\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst Create = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <>\r\n            <div class=\"container\">\r\n                <div className=\"row my-200px\">\r\n                    <div className=\"col d-flex justify-content-center\" onClick={handleShow}>\r\n                        <div className=\"tools-card\">\r\n                            <span className=\"material-icons-outlined font-size-xxlarge mb-4 text-primary\">cloud_upload</span>\r\n                            <h5 className=\"text-dark\">Tạo đề từ file word</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                        <div className=\"tools-card\">\r\n                            <span className=\"material-icons-outlined font-size-xxlarge mb-4 text-primary\">note_alt</span>\r\n                            <h5 className=\"text-dark\">Tạo đề thủ công</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Tạo Đề Từ File Word</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Chuẩn bị ra mắt\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">Tạo đề ngay</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","export function createTestRequest(payload){\r\n    return{\r\n        type: \"CreateTestRequest\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function createTestSuccess(payload){\r\n    return{\r\n        type: \"CreateTestSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function createTestFail(payload){\r\n    return{\r\n        type: \"CreateTestFail\",\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function loadTestRequest(){\r\n    return{\r\n        type: \"LoadTestRequest\"\r\n    }\r\n}\r\n\r\n\r\nexport function loadTestSuccess(payload){\r\n    return{\r\n        type: \"LoadTestSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function loadTestFail(payload){\r\n    return{\r\n        type: \"LoadTestFail\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function deleteTestRequest(payload){\r\n    return{\r\n        type: \"DeleteTestRequest\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function deleteTestSuccess(payload){\r\n    return{\r\n        type: \"DeleteTestSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function deleteTestFail(payload){\r\n    return{\r\n        type: \"DeleteTestFail\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function getTestRequest(payload){\r\n    return{\r\n        type: \"GetTestRequest\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function getTestSuccess(payload){\r\n    return{\r\n        type: \"GetTestSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function getTestFail(payload){\r\n    return{\r\n        type: \"GetTestFail\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function createQuestion(){\r\n    return{\r\n        type: \"CreateQuestion\"\r\n    }\r\n}\r\n\r\nexport function createOption(payload){\r\n    return{\r\n        type: \"CreateOption\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateExam(payload){\r\n    return{\r\n        type: \"UpdateExam\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateQuestion(payload){\r\n    return{\r\n        type: \"UpdateQuestion\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateAnswer(payload){\r\n    return{\r\n        type: \"UpdateAnswer\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateOption(payload){\r\n    return{\r\n        type: \"UpdateOption\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateTestRequest(payload){\r\n    return{\r\n        type: \"UpdateTestRequest\",\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function updateTestSuccess(payload){\r\n    return{\r\n        type: \"UpdateTestSuccess\",\r\n        payload,\r\n    }\r\n}\r\n\r\nexport function updateTestFail(payload){\r\n    return{\r\n        type: \"UpdateTestFail\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function reloadTestRequest(){\r\n    return{\r\n        type: \"ReloadTestRequest\",\r\n    }\r\n}\r\n\r\nexport function reloadTestResponse(){\r\n    return{\r\n        type: \"ReloadTestResponse\",\r\n    }\r\n}\r\n\r\nexport function deleteOption(payload){\r\n    return{\r\n        type: \"DeleteOption\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function deleteQuestion(payload){\r\n    return{\r\n        type: \"DeleteQuestion\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function answerRequest(payload){\r\n    return{\r\n        type: \"AnswerRequest\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function answerSuccess(payload){\r\n    return{\r\n        type: \"AnswerSuccess\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function answerFail(payload){\r\n    return{\r\n        type: \"AnswerFail\",\r\n        payload\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { createTestRequest } from '../actions/test';\r\nimport { Form, Button, FormControl, Modal } from 'react-bootstrap';\r\nconst HeaderCategory = (props) => {\r\n    const [test, setTest] = useState({\r\n        title: \"\",\r\n        description: \"\"\r\n    })\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        setTest({\r\n            title: \"\",\r\n            description: \"\"\r\n        })\r\n    }\r\n    function submitTest(){\r\n        if (!test.title){\r\n            alert(\"Vui lòng không bỏ trống tiêu đề\")\r\n        }else{\r\n            handleClose()\r\n            props.createTestRequest(test)\r\n            setTest({\r\n                title: \"\",\r\n                description: \"\"\r\n            })\r\n        }\r\n    }\r\n    const handleShow = () => setShow(true)\r\n    return (\r\n        <>\r\n            <div className=\"row d-flex\">\r\n                <Button variant=\"outline-dark\" className=\"col-md-2 col-10 offset-1 order-2 order-md-1 offset-md-1 d-flex align-items-center justify-content-center\" onClick={handleShow}>\r\n                    <span className=\"material-icons-outlined\">\r\n                        add\r\n                    </span>\r\n                </Button>\r\n                <Form className=\"d-flex col-md-8 col-12 order-1 order-md-2 mb-3 mb-md-0 offset-md-0\">\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"mr-2\"\r\n                        aria-label=\"Search\"\r\n                    />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Tạo Đề</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Tiêu đề</Form.Label>\r\n                            <Form.Control type=\"text\" value={test.title} onChange={(e) => setTest({\r\n                                ...test,\r\n                                title: e.target.value\r\n                            })} placeholder=\"nhập tên tiêu đề (bắt buộc)\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Mô tả</Form.Label>\r\n                            <Form.Control type=\"text\" value={test.description} onChange={(e) => setTest({\r\n                                ...test,\r\n                                description: e.target.value\r\n                            })} placeholder=\"nhập mô tả (không bắt buộc)\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Hủy\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => submitTest()}>Tạo</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, { createTestRequest })(HeaderCategory)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { loadTestRequest, deleteTestRequest } from '../actions/test';\r\nimport { Card, Button, Modal } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\"\r\nimport Loading from \"./Loading\"\r\n\r\nconst BodyCategory = (props) => {\r\n    const [idTest, setIdTest] = useState(\"\")\r\n    const [show, setShow] = useState(false);\r\n    function handleShow(id) {\r\n        setShow(true)\r\n        setIdTest(id)\r\n    }\r\n    function handleClose() {\r\n        setShow(false)\r\n        setIdTest(\"\")\r\n    }\r\n    const [loadMore, setLoadMore] = useState(true)\r\n    useEffect(() => {\r\n        if (loadMore) {\r\n            props.loadTestRequest()\r\n            setLoadMore(false)\r\n        }\r\n    }, [loadMore, props])\r\n    useEffect(() => {\r\n        if (!props.pauseLoadTest) {\r\n            window.addEventListener('scroll', loadTest)\r\n        }\r\n        return () => {\r\n            window.removeEventListener('scroll', loadTest)\r\n        }\r\n\r\n    }, [props.pauseLoadTest])\r\n    function loadTest(e) {\r\n        const root = document.querySelector('#root')\r\n        if (e.path[1].innerHeight + e.path[1].scrollY >= root.clientHeight - 200) {\r\n            setLoadMore(true)\r\n        }\r\n    }\r\n    function deleteTest() {\r\n        props.deleteTestRequest(idTest)\r\n        handleClose()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row mt-100px list-test-card\">\r\n                {props.testLoaded.length\r\n                    ?\r\n                    <>\r\n                        {props.testLoaded.map((test) =>\r\n                            <div className=\"col d-flex justify-content-center my-4\" key={test._id}>\r\n                                <Card style={{ width: '18rem' }} className=\"test-card\" >\r\n                                    <Card.Body>\r\n                                        <Card.Title className=\"title\">{test.title}</Card.Title>\r\n                                        <Card.Text className=\"description\">\r\n                                            {test.description}\r\n                                        </Card.Text>\r\n                                        <Link to={\"exam/\" + test._id}>\r\n                                            <Button variant=\"primary\" size=\"lg\" className=\"w-100\">Mở</Button>\r\n                                        </Link>\r\n                                    </Card.Body>\r\n                                    <span className=\"material-icons-outlined btn-delete\" onClick={() => handleShow(test._id)}>\r\n                                        delete\r\n                                    </span>\r\n                                </Card>\r\n                            </div>)}\r\n                    </>\r\n                    : <h4>Bạn chưa có tài liệu nào</h4>\r\n                }\r\n                {props.loadingTest ? <Loading /> : <></>}\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={() => handleClose()}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Xóa dữ liệu</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Bạn có chắc chắn muốn xóa\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                        Hủy\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => deleteTest()}>Xác Nhận</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        testLoaded: state.test.testLoaded,\r\n        loadingTest: state.test.loadingTest,\r\n        pauseLoadTest: state.test.pauseLoadTest\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loadTestRequest, deleteTestRequest })(BodyCategory)\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ScrollTop = (props) => {\r\n    function scrollTop(){\r\n        window.scrollTo(0,0)\r\n    }\r\n    return (\r\n        <Link to={props.url}>\r\n            <div className=\"arrow-top fixed-bottom cursor-pointer\" onClick={()=>{scrollTop()}}>\r\n                 <span className=\"material-icons-outlined\">\r\n                    arrow_upward\r\n                </span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ScrollTop\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HeaderCategory from \"../../components/HeaderCategory\";\r\nimport BodyCategory from \"../../components/BodyCategory\";\r\nimport ScrollTop from '../../components/ScrollTop';\r\nimport Loading from \"../../components/Loading\";\r\n\r\n\r\nconst Category = (props) => {\r\n    return (\r\n        <>\r\n            {props.loading ? <Loading /> :\r\n                <>\r\n                        <HeaderCategory />\r\n                        <BodyCategory />\r\n                        <ScrollTop url={props.url} />\r\n                </>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loading: state.test.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Category)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getTestRequest, answerRequest } from '../../actions/test';\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport Loading from \"../../components/Loading\";\r\n\r\n\r\nconst Exam = (props) => {\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        if (!props.loading) {\r\n            props.getTestRequest({\r\n                id,\r\n                userId: props.user.id\r\n            })\r\n        }\r\n        return () => {\r\n        }// eslint-disable-next-line\r\n    }, [])\r\n    function submitForm(e){\r\n        e.preventDefault()\r\n        props.answerRequest({ answer, testId: id, info: props.user })\r\n    }\r\n    var [ answer ] = useState([])\r\n    return (\r\n        <>\r\n            {props.loading ? <Loading /> :\r\n                <>\r\n                    {props.exam ?\r\n                        <>\r\n                            {props.user.id === props.exam.userId ? <Link to={\"/admin/test/edit/\" + id}><Button className=\"mb-4\">Vào chế độ chỉnh sửa</Button></Link> : <></>}\r\n                            <div className=\"exam select-none\">\r\n                                <h3>{props.exam.title.toUpperCase()}</h3>\r\n                                <p>{props.exam.description}</p>\r\n                                <Form className=\"mt-4 exam-questions\" onSubmit={(e)=> submitForm(e)}>\r\n                                    {props.exam.questions.length\r\n                                        ?\r\n                                        <>\r\n                                            {props.exam.questions?.map((question, indexQuestion) =>\r\n                                                <Form.Group className=\"exam-question\" key={question.id} name={question.id} onBlur={(e)=>answer[indexQuestion]={\r\n                                                    questionId: question.id,\r\n                                                    answer: e.target.value\r\n                                                }}>\r\n                                                    <Form.Label className=\"exam-question-title\"> {question.title}</Form.Label>\r\n                                                    {question.options?.map((option, index) =>\r\n                                                        <div className=\"d-flex align-items-center\" key={`g${question.id}.${index}`}>\r\n                                                            <Form.Check className=\"exam-option me-2\" value={index} type={question.type} name={question.id} key={index} id={`${question.id}.${index}`}></Form.Check>\r\n                                                            <Form.Label className=\"flex-1 mb-0 exam-option-label\" htmlFor={`${question.id}.${index}`} key={`n${index}`}>{option}</Form.Label>\r\n                                                        </div>)}\r\n                                                </Form.Group>)}\r\n                                                <Button type=\"submit\">Gửi bài</Button>\r\n                                        </>\r\n                                        : <>Chưa tạo câu hỏi nào</>\r\n                                    }\r\n                                </Form>\r\n                            </div>\r\n                        </> : <>Không tồn tại vui lòng kiểm tra đường dẫn</>}\r\n                </>}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        exam: state.test.exam,\r\n        loading: state.test.loading,\r\n        user: state.login.info\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getTestRequest, answerRequest })(Exam)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    getTestRequest,\r\n    createQuestion,\r\n    updateExam,\r\n    createOption,\r\n    updateQuestion,\r\n    updateTestRequest,\r\n    updateOption,\r\n    updateAnswer,\r\n    deleteOption,\r\n    deleteQuestion\r\n} from '../../actions/test';\r\nimport { Form, Tabs, Tab, Table } from \"react-bootstrap\"\r\nimport Loading from \"../../components/Loading\";\r\n\r\n\r\nconst Edit = (props) => {\r\n    const [key, setKey] = useState('edit')\r\n    const { id } = useParams()\r\n    useEffect(() => {\r\n        if (!props.loading) {\r\n            props.getTestRequest({\r\n                id,\r\n                userId: props.user.id\r\n            })\r\n        }\r\n        return () => {\r\n            props.updateTestRequest()\r\n        }// eslint-disable-next-line\r\n    }, [])\r\n    return (\r\n        <>\r\n            {props.loading ? <Loading />\r\n                :\r\n                <>\r\n                    {props.user.id === props.exam?.userId\r\n                        ?\r\n                        <>\r\n                            {props.exam ?\r\n                                <>\r\n                                    <Tabs activeKey={key} onSelect={(k) => setKey(k)}>\r\n                                        <Tab eventKey=\"edit\" title=\"Đề thi\">\r\n                                            <div className=\"exam select-none\">\r\n                                                <h3 suppressContentEditableWarning=\"true\" className=\"exam-title\" contentEditable=\"true\" onBlur={(e) => props.updateExam({ title: e.target.innerText })}>{props.exam.title.toUpperCase()}</h3>\r\n                                                <i>{props.exam.createdAt}</i>\r\n                                                <p suppressContentEditableWarning=\"true\" className=\"exam-description\" onBlur={(e) => props.updateExam({ description: e.target.innerText })} contentEditable=\"true\">{props.exam.description ? props.exam.description : <>Chưa có mô tả</>}</p>\r\n                                                <Form className=\"mt-4 exam-questions\">\r\n                                                    {props.exam.questions.length > 0\r\n                                                        ?\r\n                                                        <>\r\n                                                            {props.exam.questions.map((question, indexQuestion) =>\r\n                                                                <Form.Group className=\"exam-question\" key={question.id} onBlur={(e) => props.updateAnswer({\r\n                                                                    indexQuestion,\r\n                                                                    value: e.target.value\r\n                                                                })\r\n\r\n                                                                }>\r\n                                                                    <Form.Label suppressContentEditableWarning=\"true\" className=\"exam-question-title\" contentEditable=\"true\" onBlur={(e) => {\r\n                                                                        const value = e.target.innerText\r\n                                                                        props.updateQuestion({\r\n                                                                            indexQuestion,\r\n                                                                            value\r\n                                                                        })\r\n                                                                    }}> {question.title}</Form.Label>\r\n                                                                    {question.options.map((option, index) =>\r\n                                                                        <div className=\"d-flex align-items-center exam-question-group\" key={`g${question.id}.${index}`}>\r\n                                                                            {props.exam.answers[indexQuestion] === index.toString()\r\n                                                                                ? <>\r\n                                                                                    <Form.Check className=\"exam-option me-2\" value={index} type={question.type} name={question.id} key={index} id={`${question.id}.${index}`} defaultChecked></Form.Check></>\r\n                                                                                :\r\n                                                                                <>\r\n                                                                                    <Form.Check className=\"exam-option me-2\" value={index} type={question.type} name={question.id} key={index} id={`${question.id}.${index}`}></Form.Check></>\r\n                                                                            }\r\n                                                                            <Form.Label suppressContentEditableWarning=\"true\" contentEditable=\"true\" className=\"flex-1 mb-0 exam-option-label\" key={`n${index}`} onBlur={(e) => props.updateOption({\r\n                                                                                index,\r\n                                                                                indexQuestion,\r\n                                                                                value: e.target.innerText\r\n                                                                            })}>{option}</Form.Label>\r\n                                                                            <span className=\"material-icons-outlined exam-option-delete\" onClick={(e) => props.deleteOption({\r\n                                                                                indexQuestion,\r\n                                                                                index\r\n                                                                            })}>clear</span>\r\n                                                                        </div>)}\r\n                                                                    <span className=\"mt-1 material-icons exam-add-option\" onClick={(e) => props.createOption({ id: question.id })}>control_point</span>\r\n                                                                    <div className=\"exam-question-tool\">\r\n                                                                        <span className=\"material-icons exam-question-tool-item\" onClick={(e) => props.deleteQuestion({ indexQuestion })}>delete_outlined</span>\r\n                                                                    </div>\r\n\r\n                                                                </Form.Group>)}\r\n                                                        </>\r\n                                                        : <>Chưa tạo câu hỏi nào</>\r\n                                                    }\r\n                                                </Form>\r\n                                            </div>\r\n                                            <div className=\"fixed-bottom test-tools\">\r\n                                                <div className=\"test-tools-btn\" onClick={() => props.createQuestion()}>\r\n                                                    <span className=\"material-icons-outlined\">add_box</span>\r\n                                                    <span className=\"d-none d-md-block\">Thêm câu hỏi</span>\r\n                                                </div>\r\n                                                <Link to={\"/admin/test/exam/\" + id} className=\"test-tools-btn\">\r\n                                                    <span className=\"material-icons-outlined\">library_books</span>\r\n                                                    <span className=\"d-none d-md-block\">Xem đề thi</span>\r\n                                                </Link>\r\n                                                <div className=\"test-tools-btn\" onClick={() => props.updateTestRequest()}>\r\n                                                    <span className=\"material-icons-outlined\">save</span>\r\n                                                    <span className=\"d-none d-md-block\">Lưu đề thi</span>\r\n                                                </div>\r\n                                                <div className=\"test-tools-btn\" onClick={() => {alert(`${window.location.host}/admin/test/exam/${id}`)}}>\r\n                                                    <span className=\"material-icons-outlined\">link</span>\r\n                                                    <span className=\"d-none d-md-block\">Lấy liên kết đề</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Tab>\r\n                                        <Tab eventKey=\"responseAnswers\" title=\"Phản hồi\">\r\n                                            <div className=\"response\">\r\n                                                <h3 className=\"response-title\">{props.responseAnswers.length} phản hồi</h3>\r\n                                                <Table striped bordered hover>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>#</th>\r\n                                                            <th>Time</th>\r\n                                                            <th>Username</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {props.responseAnswers.map((answer, index) => \r\n                                                        <tr>\r\n                                                            <td>{index}</td>\r\n                                                            <td>{answer.date}</td>\r\n                                                            <td>{answer.info.username}</td>\r\n                                                        </tr>)}\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Tab>\r\n                                    </Tabs>\r\n\r\n                                </> : <>Không tồn tại vui lòng kiểm tra đường dẫn</>}\r\n                        </>\r\n                        :\r\n                        <>\r\n                            Không tồn tại vui lòng kiểm tra đường dẫn\r\n                        </>}\r\n                </>}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        exam: state.test.exam,\r\n        loading: state.test.loading,\r\n        user: state.login.info,\r\n        responseAnswers: state.test.responseAnswers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        getTestRequest,\r\n        createQuestion,\r\n        updateExam,\r\n        createOption,\r\n        updateQuestion,\r\n        updateTestRequest,\r\n        updateOption,\r\n        updateAnswer,\r\n        deleteOption,\r\n        deleteQuestion\r\n    })(Edit)\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../pages/Login'\r\n\r\nconst PrivateRouter = (props) => {\r\n    return (\r\n        <>\r\n            <Route path={props.path}> \r\n                {props.loginState.isLogined\r\n                ?\r\n                <>\r\n                    {props.components}\r\n                </>\r\n                : <Login/>}\r\n            </Route>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        loginState: state.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRouter)\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Create from './Create';\r\nimport Category from \"./Category\";\r\nimport Exam from './Exam';\r\nimport Edit from './Edit';\r\nimport PrivateRouter from '../PrivateRouter';\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div className=\"container mt-header py-4\">\r\n            <Switch>\r\n                <PrivateRouter path=\"/admin/test/category\" components={<Category url=\"/admin/test/category\"/>} exact/>\r\n                <PrivateRouter path=\"/admin/test/create\" components={<Create/>} exact />\r\n                <PrivateRouter path=\"/admin/test/exam/:id\" components={<Exam/>}/>\r\n                <PrivateRouter path=\"/admin/test/edit/:id\" components={<Edit/>}/>\r\n                <PrivateRouter path=\"**\" components=\"Trang không tồn tại bạn vui lòng kiểm tra đường dẫn\"/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","import \"material-icons/iconfont/material-icons.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { useEffect } from \"react\"\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport Loading from \"./components/Loading\";\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport Login from \"./pages/Login\";\nimport Tools from \"./pages/Tools\";\nimport Signup from \"./pages/Signup\";\nimport Test from \"./pagesprivate/test/Test\";\n\nimport { verifyAuthRequest } from \"./actions/login\";\n\n\n\nfunction App(props) {\n  useEffect(() => {\n    if (!props.loginState.isLogined)\n      props.verifyAuthRequest()\n    return () => {\n    }// eslint-disable-next-line\n  }, [])\n  return (\n    <>\n      {props.loginState.loginLoading ? <Loading /> :\n        <>\n          <Router>\n            <Header infoUser={props.loginState.info} />\n            <Switch>\n              <Route path=\"/tools\" exact>\n                <Tools />\n              </Route>\n              <Route path=\"/login\" exact>\n                {props.loginState.isLogined ? <Redirect to=\"/\"></Redirect> : <Login />}\n              </Route>\n              <Route path=\"/signup\" exact>\n                {props.loginState.isLogined ? <Redirect to=\"/\"></Redirect> : <Signup />}\n\n              </Route>\n              <Route path=\"/admin/test\">\n                <Test />\n              </Route>\n              <Route path=\"**\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </>}\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return { loginState: state.login }\n}\n\n\nexport default connect(mapStateToProps, { verifyAuthRequest })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultReducer = {\r\n    signupLoading: false,\r\n    signupStatus: \"\"\r\n}\r\n\r\nconst signupReducer = (state = defaultReducer, action) => {\r\n    switch (action.type) {\r\n        case \"CreateUserRequest\":{\r\n            return {\r\n                signupLoading: true,\r\n                signupStatus: \"Đang tạo tài khoản...\"\r\n            }\r\n        }\r\n        case \"CreateUserSuccess\":{\r\n            return {\r\n                signupLoading: false,\r\n                signupStatus: action.payload.message\r\n            }\r\n        }\r\n        case \"CreateUserFail\":{\r\n            return {\r\n                signupLoading: false,\r\n                signupStatus: action.error.message\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default signupReducer","const defaultReducer = {\r\n    loginLoading: true,\r\n    loginStatus: \"\",\r\n    isLogined: false,\r\n    info: null,\r\n}\r\n\r\nconst loginReducer = (state = defaultReducer, action) => {\r\n    switch (action.type) {\r\n        case \"LoginRequest\":{\r\n            return {\r\n                ...state,\r\n                loginLoading: true,\r\n                loginStatus: \"Đang đăng nhập...\",\r\n                isLogined: false\r\n            }\r\n        }\r\n        case \"LoginSuccess\":{\r\n            localStorage.setItem(\"access-token\", action.payload.accessToken)\r\n            localStorage.setItem(\"refresh-token\", action.payload.refreshToken)\r\n            return {\r\n                loginLoading: false,\r\n                loginStatus: \"\",\r\n                isLogined: true,\r\n                info: action.payload.info,\r\n            }\r\n        }\r\n        case \"LoginFail\":{\r\n            return {\r\n                ...state,\r\n                loginLoading: false,\r\n                loginStatus: action.error.message,\r\n            }\r\n        }\r\n        case \"VerifyAuthRequest\":{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case \"VerifyAuthSuccess\":{\r\n            return {\r\n                ...state,\r\n                loginLoading: false,\r\n                isLogined: true,\r\n                info: action.payload.info,\r\n            }\r\n        }\r\n        case \"VerifyAuthFail\":{\r\n            return {\r\n                ...state,\r\n                loginLoading: false,\r\n            }\r\n        }\r\n        case \"Logout\":{\r\n            localStorage.removeItem(\"access-token\")\r\n            localStorage.removeItem(\"refresh-token\")\r\n            return{\r\n                ...state,\r\n                isLogined: false,\r\n                info: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","import { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst defaultReducer = {\r\n    loading: false,\r\n    loadingTest: false,\r\n    testLoaded: [],\r\n    page: {\r\n        limitPage: 9,\r\n        skipPage: 0\r\n    },\r\n    pauseLoadTest: false,\r\n    exam: null\r\n}\r\n\r\nconst testReducer = (state = defaultReducer, action) => {\r\n    switch (action.type) {\r\n        case \"CreateTestRequest\": {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case \"CreateTestSuccess\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                page: {\r\n                    ...state.page,\r\n                    skipPage: state.page.skipPage + 1\r\n                },\r\n                testLoaded: [action.payload.data, ...state.testLoaded]\r\n            }\r\n        }\r\n        case \"CreateTestFail\": {\r\n            alert(\"có lỗi xãy ra vui lòng thử lại\")\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        }\r\n        case \"LoadTestRequest\": {\r\n            return {\r\n                ...state,\r\n                loadingTest: true,\r\n            }\r\n        }\r\n        case \"LoadTestSuccess\": {\r\n            return {\r\n                ...state,\r\n                loadingTest: false,\r\n                testLoaded: [...state.testLoaded, ...action.payload.data.data],\r\n                page: {\r\n                    limitPage: 6,\r\n                    skipPage: action.payload.data.data.length + state.page.skipPage\r\n                }\r\n            }\r\n        }\r\n        case \"LoadTestFail\": {\r\n            return {\r\n                ...state,\r\n                loadingTest: false,\r\n                pauseLoadTest: true\r\n            }\r\n        }\r\n        case \"DeleteTestRequest\": {\r\n            return state\r\n        }\r\n        case \"DeleteTestSuccess\": {\r\n            const index = state.testLoaded.findIndex((test) => test._id === action.payload)\r\n            return {\r\n                ...state,\r\n                testLoaded: [...state.testLoaded.slice(0, index), ...state.testLoaded.slice(index + 1, state.testLoaded.length)]\r\n            }\r\n        }\r\n        case \"DeleteTestFail\": {\r\n            alert('có lỗi xảy ra vui lòng thử lại')\r\n            return state\r\n        }\r\n        case \"GetTestRequest\": {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case \"GetTestSuccess\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                exam: action.payload.data.data,\r\n                responseAnswers: action.payload.data.reponseAnswers\r\n            }\r\n        }\r\n        case \"GetTestFail\": {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        }\r\n        case \"CreateQuestion\": {\r\n            state.exam.answers.push(null)\r\n            return {\r\n                ...state,\r\n                exam: {\r\n                    ...state.exam,\r\n                    questions: [...state.exam.questions, {\r\n                        id: uuidv4(),\r\n                        title: \"Câu hỏi mới\",\r\n                        options: [],\r\n                        type: \"radio\"\r\n                    }],\r\n                }\r\n            }\r\n        }\r\n        case \"CreateOption\": {\r\n            const questions = state.exam.questions.map((question) => {\r\n                if (question.id === action.payload.id) {\r\n                    question = {\r\n                        ...question,\r\n                        options: [...question.options, \"trống\"]\r\n                    }\r\n                }\r\n                return question\r\n            })\r\n            return {\r\n                ...state,\r\n                exam: {\r\n                    ...state.exam,\r\n                    questions: questions\r\n                }\r\n            }\r\n        }\r\n        case \"UpdateExam\": {\r\n            return {\r\n                ...state,\r\n                exam: {\r\n                    ...state.exam,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        }\r\n        case \"UpdateQuestion\": {\r\n            state.exam.questions[action.payload.indexQuestion].title = action.payload.value\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case \"UpdateAnswer\": {\r\n            state.exam.answers[action.payload.indexQuestion] = action.payload.value\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case \"UpdateOption\": {\r\n            state.exam.questions[action.payload.indexQuestion].options[action.payload.index] = action.payload.value\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case \"UpdateTestRequest\": {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case \"UpdateTestSuccess\": {\r\n            return {\r\n                ...state,\r\n                exam: action.payload.data.data\r\n            }\r\n        }\r\n        case \"UpdateTestFail\": {\r\n            alert(\"có lỗi xảy ra vui lòng thử lại\")\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case \"ReloadTestRequest\": {\r\n            return {\r\n                loading: true,\r\n                ...state\r\n            }\r\n        }\r\n        case \"ReloadTestResponse\": {\r\n            return {\r\n                loading: false,\r\n                ...state\r\n            }\r\n        }\r\n        case \"DeleteOption\": {\r\n            const { indexQuestion, index } = action.payload\r\n            const questions = state.exam.questions\r\n            questions[indexQuestion].options.splice(index,1)\r\n            return{\r\n                ...state,\r\n                exam: {\r\n                    ...state.exam,\r\n                    questions,\r\n                }\r\n            }\r\n        }\r\n        case \"DeleteQuestion\": {\r\n            const { indexQuestion } = action.payload\r\n            const questions = state.exam.questions\r\n            questions.splice(indexQuestion,1)\r\n            return {\r\n                ...state,\r\n                exam:{\r\n                    ...state.exam,\r\n                    questions\r\n                }\r\n            }\r\n        }\r\n        case \"AnswerRequest\": {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case \"AnswerSuccess\": {\r\n            alert(\"Nộp thành công\")\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n\r\n            }\r\n        }\r\n        case \"AnswerFail\": {\r\n            alert(\"Nộp thất bại\")\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default testReducer","import { combineReducers } from \"redux\";\r\nimport signupReducer from \"./signup\";\r\nimport loginReducer from \"./login\";\r\nimport testReducer from \"./test\";\r\n\r\n\r\nexport default combineReducers({\r\n    signup : signupReducer,\r\n    login : loginReducer,\r\n    test : testReducer\r\n})","import axios from \"axios\"\r\nconst URL = process.env.NODE_ENV !== \"production\" ?  \"https://web-tfo-demo.herokuapp.com\" : \"http://localhost:5000\" \r\n\r\nconst instance = axios.create({\r\n    baseURL: URL\r\n  })\r\n\r\nexport default instance","import instance from \"./index\";\r\n\r\nexport function createUser(data){\r\n    return instance.post('auth/signup', data)\r\n}\r\n\r\nexport function login(data){\r\n    return instance.post('auth/login', data)\r\n}\r\n\r\nexport function verifyAuth(){\r\n    return instance.post('auth',null,{\r\n        headers: {\r\n            accessToken: localStorage.getItem(\"access-token\"), \r\n            refreshToken: localStorage.getItem(\"refresh-token\") \r\n        }\r\n    })\r\n}\r\n\r\n","import { call, put } from \"@redux-saga/core/effects\"\r\nimport * as apiAuth from \"../api/auth\"\r\nimport { createUserFail, createUserSuccess } from \"../actions/signup\"\r\nimport { loginSuccess, loginFail, verifyAuthSuccess, verifyAuthFail } from \"../actions/login\"\r\n\r\nexport function* signup(action){\r\n    try{\r\n        const response = yield call(apiAuth.createUser, action.payload)\r\n        if (response.data.success === true){\r\n            yield put(createUserSuccess(response.data))\r\n        }else{\r\n            yield put(createUserFail(response.data))\r\n        }\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* login(action){\r\n    try{\r\n        const response = yield call(apiAuth.login, action.payload)\r\n        \r\n        if (response.data.success === true){\r\n            yield put(loginSuccess(response.data))\r\n        }else{\r\n            yield put(loginFail(response.data))\r\n        }\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* verifyAuth(){\r\n    try{\r\n        const response = yield call(apiAuth.verifyAuth)\r\n        if (response.data.success === true){\r\n            yield put(verifyAuthSuccess(response.data))\r\n        }else{\r\n            yield put(verifyAuthFail(response.data))\r\n        }\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n","import instance from \"./index\"\r\n\r\nexport function createTest(data){\r\n    return instance.post(\"/admin/test/create\",{\r\n        ...data\r\n    })\r\n}\r\n\r\n\r\nexport function loadTest(data){\r\n    return instance.post(\"/admin/test/category\",{\r\n        ...data,\r\n    })\r\n}\r\n\r\nexport function deleteTest(data){\r\n    return instance.post(\"/admin/test/delete\",{\r\n        id: data\r\n    })\r\n}\r\n\r\nexport function getTest(data){\r\n    return instance.post(\"/admin/test/get\",{\r\n        data\r\n    })\r\n}\r\n\r\nexport function updateTest(data){\r\n    return instance.patch(\"/admin/test/update\",{\r\n        ...data\r\n    })\r\n}\r\n\r\nexport function answerTest(data){\r\n    return instance.patch(\"/admin/test/answer\",{\r\n        ...data\r\n    })\r\n}","import { call, put, select } from \"@redux-saga/core/effects\"\r\nimport * as apiTest from \"../api/test\"\r\nimport {\r\n    createTestSuccess,\r\n    createTestFail,\r\n    loadTestSuccess,\r\n    loadTestFail,\r\n    deleteTestSuccess,\r\n    deleteTestFail,\r\n    getTestSuccess,\r\n    getTestFail,\r\n    updateTestSuccess,\r\n    updateTestFail,\r\n    reloadTestResponse,\r\n    answerSuccess,\r\n    answerFail\r\n} from \"../actions/test\"\r\n\r\nexport function* createTest(action) {\r\n    try {\r\n        const id = yield select((state) => state.login.info.id)\r\n        const data = {\r\n            test: {\r\n                ...action.payload,\r\n                question: []\r\n            },\r\n            id\r\n        }\r\n        const test = yield call(apiTest.createTest, data)\r\n        yield put(createTestSuccess(test.data))\r\n    } catch (error) {\r\n        yield put(createTestFail(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* loadTest() {\r\n    try {\r\n        const info = yield select((state) => state.login.info)\r\n        const page = yield select((state) => state.test.page)\r\n        const data = {\r\n            info,\r\n            page,\r\n        }\r\n        const testLoaded = yield call(apiTest.loadTest, data)\r\n        yield put(loadTestSuccess(testLoaded))\r\n    } catch (error) {\r\n        yield put(loadTestFail(error))\r\n    }\r\n}\r\n\r\nexport function* deleteTest(action) {\r\n    try {\r\n        yield call(apiTest.deleteTest, action.payload)\r\n        yield put(deleteTestSuccess(action.payload))\r\n    } catch (error) {\r\n        yield put(deleteTestFail(error))\r\n    }\r\n}\r\n\r\nexport function* getTest(action) {\r\n    try {\r\n        const data = yield call(apiTest.getTest, action.payload)\r\n        yield put(getTestSuccess(data))\r\n    } catch (error) {\r\n        yield put(getTestFail(error))\r\n    }\r\n}\r\n\r\nexport function* updateTest(action) {\r\n    try {\r\n        const test = yield select((state) => state.test.exam)\r\n        const data = yield call(apiTest.updateTest, { test })\r\n        yield put(updateTestSuccess(data))\r\n    } catch (error) {\r\n        yield put(updateTestFail(error))\r\n    }\r\n}\r\n\r\nexport function* answerTest(action) {\r\n    try {\r\n        const data = yield call(apiTest.answerTest,action.payload)\r\n        yield put(answerSuccess(data))\r\n    } catch (error) {\r\n        yield put(answerFail(error))\r\n    }\r\n}\r\n\r\nexport function* reloadTest(action) {\r\n    yield put(reloadTestResponse())\r\n}","import { takeLatest, takeEvery } from \"@redux-saga/core/effects\";\r\nimport { signup, login, verifyAuth } from \"./auth\";\r\nimport { createTest, loadTest, deleteTest, getTest, updateTest, reloadTest, answerTest } from \"./test\";\r\n\r\nfunction* mySaga(){\r\n    yield takeLatest(\"CreateUserRequest\",signup)\r\n    yield takeLatest(\"LoginRequest\",login)\r\n    yield takeLatest(\"VerifyAuthRequest\",verifyAuth)\r\n    yield takeLatest(\"CreateTestRequest\",createTest)\r\n    yield takeEvery(\"LoadTestRequest\",loadTest)\r\n    yield takeEvery(\"DeleteTestRequest\",deleteTest)\r\n    yield takeLatest(\"GetTestRequest\",getTest)\r\n    yield takeLatest(\"UpdateTestRequest\",updateTest)\r\n    yield takeEvery(\"ReloadTestRequest\",reloadTest)\r\n    yield takeLatest(\"AnswerRequest\",answerTest)\r\n}\r\n\r\nexport default mySaga","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\n\r\nimport reducers from \"../reducers\";\r\nimport mySaga from \"../sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n/* const store = createStore(\r\n    reducers,\r\n    applyMiddleware(sagaMiddleware),\r\n)\r\n\r\n */\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(sagaMiddleware),\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(reducers, enhancer);\r\n\r\nsagaMiddleware.run(mySaga)\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\"\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}